{"ast":null,"code":"var _jsxFileName = \"/Users/chemenda/Desktop/BattleCards/src/App.js\";\nimport React from 'react';\nimport uuid from 'uuid';\nimport Cards from './components/Cards';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addCard = () => {\n      this.setState({\n        cards: this.state.cards.concat([{\n          id: uuid.v4(),\n          text: 'New card'\n        }])\n      });\n    };\n\n    this.deleteCard = (id, e) => {\n      // Avoid bubbling to edit\n      e.stopPropagation();\n      this.setState({\n        cards: this.state.cards.filter(card => card.id !== id)\n      });\n    };\n\n    this.activateCardEdit = id => {\n      this.setState({\n        cards: this.state.cards.map(card => {\n          if (card.id === id) {\n            card.editing = true;\n          }\n\n          return card;\n        })\n      });\n    };\n\n    this.editCard = (id, task) => {\n      this.setState({\n        cards: this.state.cards.map(card => {\n          if (card.id === id) {\n            card.editing = false;\n            card.task = task;\n          }\n\n          return card;\n        })\n      });\n    };\n\n    this.state = {\n      cards: [{\n        id: uuid.v4(),\n        text: \"New Card\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      cards\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Cards, {\n      cards: cards,\n      onCardClick: this.activateCardEdit,\n      onEdit: this.editCard,\n      onDelete: this.deleteCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"+\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/chemenda/Desktop/BattleCards/src/App.js"],"names":["React","uuid","Cards","App","Component","constructor","props","addCard","setState","cards","state","concat","id","v4","text","deleteCard","e","stopPropagation","filter","card","activateCardEdit","map","editing","editCard","task","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,OA3BmB,GA2BT,MAAM;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,MAAjB,CAAwB,CAAC;AAC9BC,UAAAA,EAAE,EAAEX,IAAI,CAACY,EAAL,EAD0B;AAE9BC,UAAAA,IAAI,EAAE;AAFwB,SAAD,CAAxB;AADK,OAAd;AAMD,KAlCkB;;AAAA,SAoCnBC,UApCmB,GAoCN,CAACH,EAAD,EAAKI,CAAL,KAAW;AACtB;AACAA,MAAAA,CAAC,CAACC,eAAF;AAEA,WAAKT,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBS,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAA5C;AADK,OAAd;AAGD,KA3CkB;;AAAA,SA6CnBQ,gBA7CmB,GA6CCR,EAAD,IAAQ;AACzB,WAAKJ,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBY,GAAjB,CAAqBF,IAAI,IAAI;AAClC,cAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;AACjBO,YAAAA,IAAI,CAACG,OAAL,GAAe,IAAf;AACD;;AAED,iBAAOH,IAAP;AACD,SANM;AADK,OAAd;AASD,KAvDkB;;AAAA,SAwDnBI,QAxDmB,GAwDR,CAACX,EAAD,EAAKY,IAAL,KAAc;AACvB,WAAKhB,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,CAAiBY,GAAjB,CAAqBF,IAAI,IAAI;AAClC,cAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;AACjBO,YAAAA,IAAI,CAACG,OAAL,GAAe,KAAf;AACAH,YAAAA,IAAI,CAACK,IAAL,GAAYA,IAAZ;AACD;;AAED,iBAAOL,IAAP;AACD,SAPM;AADK,OAAd;AAUD,KAnEkB;;AAGjB,SAAKT,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,CACL;AAACG,QAAAA,EAAE,EAAEX,IAAI,CAACY,EAAL,EAAL;AACAC,QAAAA,IAAI,EAAE;AADN,OADK;AADI,KAAb;AAMD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAChB,MAAAA;AAAD,QAAU,KAAKC,KAArB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAED,KADT;AAEE,MAAA,WAAW,EAAE,KAAKW,gBAFpB;AAGE,MAAA,MAAM,EAAE,KAAKG,QAHf;AAIE,MAAA,QAAQ,EAAE,KAAKR,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAQ,MAAA,OAAO,EAAI,KAAKR,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF;AAWD;;AA1B8C","sourcesContent":["import React from 'react';\nimport uuid from 'uuid';\nimport Cards from './components/Cards';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cards: [\n        {id: uuid.v4(),\n        text: \"New Card\"}\n      ]\n    };\n  }\n\n  render() {\n    const {cards} = this.state;\n\n    return (\n      <div>\n        <Cards\n          cards={cards}\n          onCardClick={this.activateCardEdit}\n          onEdit={this.editCard}\n          onDelete={this.deleteCard}\n          />\n        <button onClick = {this.addCard}>+</button>\n      </div>\n    );\n  }\n\n  addCard = () => {\n    this.setState({\n      cards: this.state.cards.concat([{\n        id: uuid.v4(),\n        text: 'New card'\n      }])\n    });\n  }\n\n  deleteCard = (id, e) => {\n    // Avoid bubbling to edit\n    e.stopPropagation();\n\n    this.setState({\n      cards: this.state.cards.filter(card => card.id !== id)\n    });\n  }\n\n  activateCardEdit = (id) => {\n    this.setState({\n      cards: this.state.cards.map(card => {\n        if(card.id === id) {\n          card.editing = true;\n        }\n\n        return card;\n      })\n    });\n  }\n  editCard = (id, task) => {\n    this.setState({\n      cards: this.state.cards.map(card => {\n        if(card.id === id) {\n          card.editing = false;\n          card.task = task;\n        }\n\n        return card;\n      })\n    });\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}