{"ast":null,"code":"var _jsxFileName = \"/Users/chemenda/Desktop/BattleCards/src/components/Editable.jsx\";\nimport React from 'react';\nexport default (({\n  editing,\n  value,\n  onEdit,\n  ...props\n}) => {\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Edit, Object.assign({\n      value: value,\n      onEdit: onEdit\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }), \"value: \", value);\n});\n\nconst Edit = ({\n  onEdit = () => {},\n  value,\n  ...props\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n  onClick: onEdit\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"edit: \", value));","map":{"version":3,"sources":["/Users/chemenda/Desktop/BattleCards/src/components/Editable.jsx"],"names":["React","editing","value","onEdit","props","Edit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,MAAjB;AAAyB,KAAGC;AAA5B,CAAD,KAAwC;AACrD,MAAGH,OAAH,EAAY;AACV,wBAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,KAAb;AAAoB,MAAA,MAAM,EAAEC;AAA5B,OAAwCC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,sBAAO,8CAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyBF,KAAzB,CAAP;AACD,CAND;;AAQA,MAAMG,IAAI,GAAG,CAAC;AAACF,EAAAA,MAAM,GAAG,MAAM,CAAE,CAAlB;AAAoBD,EAAAA,KAApB;AAA2B,KAAGE;AAA9B,CAAD,kBACX;AAAK,EAAA,OAAO,EAAED;AAAd,GAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaF,KAAb,CADF,CADF","sourcesContent":["import React from 'react';\n\nexport default ({editing, value, onEdit, ...props}) => {\n  if(editing) {\n    return <Edit value={value} onEdit={onEdit} {...props} />;\n  }\n\n  return <span {...props}>value: {value}</span>;\n}\n\nconst Edit = ({onEdit = () => {}, value, ...props}) => (\n  <div onClick={onEdit} {...props}>\n    <span>edit: {value}</span>\n  </div>\n);"]},"metadata":{},"sourceType":"module"}